ls()
ls
debug(ls)
debug(ls)
ls
ls()
quit
exit()
quit(0)
bye()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
{
if (!missing(name)) {
pos <- tryCatch(name, error = function(e) e)
if (inherits(pos, "error")) {
name <- substitute(name)
quit()
exit
bye()
undebug(ls)
quit
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
?inverse
?mean
my_matrix
cacheSolve
cacheSolve(my_matrix)
?solve
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(my_matrix)
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$getInverse()
my_matrix$get()
cacheSolve(my_matrix)
?mat
?data
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
?solve
source('~/GIT/Prog2/ProgrammingAssignment2/cachematrix.R')
my_matrix$getInverse()
my_matrix$get()
swirl()
library(swirl)
swirl()
2
bye()
swirl()
Sys.Data()
Sys.Date()
mean(c(2,4,5))
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/boring_function.R')
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/boring_function.R')
submit()
boring_function("My first function!")
boring_function
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/my_mean.R')
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/my_mean.R')
submit()
my_mean(c(4,5,10))
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/remainder.R')
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/remainder.R')
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/remainder.R')
submit()
remainder(5)
remainer(11,5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/evaluate.R')
submit()
evaluate(deviance,c(1.4,3.6,7.9,8.8))
evaluate(mean,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(anonymous,c(8,4,0))
evaluate(,c(8,4,0))
?anonymous
evaluate(function(x) {x[1]}, c(8,4,0))
evaluate(function(x) {x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is","fun!")
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/telegram.R')
submit()
telegram("Good","Morning")
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/mad_libs.R')
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/mad_libs.R')
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/mad_libs.R')
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/mad_libs.R')
submit()
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/mad_libs.R')
submit()
mad_lib("Palo Alto","smart","Alisen")
mad_libs("Palo Alto","smart","Alisen")
source('/var/folders/36/j9mdjhz512j66vrc4846d3080000gn/T//RtmpwoMsbK/bin_op.R')
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(dl)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <-"October 17, 1986 8:24"
t3 <-strptime("October 17, 1986 8:24")
t3 <-strptime("October 17, 1986 8:24",(YYYY-MM-DD))
t3 <-strptime("October 17, 1986 8:24",YYYY-MM-DD)
info()
t3 <-c("October 17, 1986 8:24")
t3 <-c("\"October 17, 1986 8:24\"")
?strptime
t3 <-strptime("October 17, 1986 8:24",%Y%m%d)
t3 <-strptime("October 17, 1986 8:24",%Y-%m-%d)
t3 <- strptime(c("October 17, 1986 8:24"), %Y-%m-%d)
t3 <- strptime(c("October 17, 1986 8:24"), "%Y-%m-%d")
t3 <- strptime(c("\"October 17, 1986 8:24\""), "%Y-%m-%d")
info()
skip()
t3 <- "October 18, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - 1
Sys.time() - t1
difftime(Sys.time,t1,units="days")
difftime(Sys.time(),t1,units="days")
install.packages("jpeg")
swirl()
library(swirl)
swirl()
install.packages(ggplot2)
install.packages("ggplot2"")
quit
install.packages("ggplot2")
library("swirl")
swirl()
head(pollution)
?dim
dim(pollution)
summary(pollution$pm25)
ppm<-pollution$pm25
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
?rug
rug(ppm,ticksize=1)
?hist
high <- pollution[ppm>15]
high <- pollution[ppm>15,]
low <- pollution[ppm <5,]
high
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=12,col="magenta",lwd=4)
abline(v=median(ppm),col="magenta",lwd=4)
head(pollution)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data=pollution, col="red")
par(pfrow=c(2,1),mar=c(4,4,2,1))
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region="west"),col=green)
hist(subset(pollution,region="west"),col="green")
hist(subset(pollution,region=="west"),col="green")
hist(subset(pm25,region=="west"),col="green")
hist(subset(pollution$pm25,region=="west"),col="green")
hist(subset(pollution,region=="west"),col="green")
info()
nxt()
hist(subset(pollution,region=="west"),col="green")
hist(subset(pollution,region=="west"),col=="green")
with(subset(pollution,region=="west"),col="green"))
with(subset(pollution,region=="west"),col="green")
hist(west,col="green")
hist(east,col="green")
nxt(0)
nxt()
hist(subset(east$pm25,region=="east"),col="green")
hist(subset(pollution$pm25,region=="east"),col="green")
east$pm25
hist(subset(pollution,region=="west")$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution, plot(lattitude,pm25))
with(pollution, plot(latitude,pm25))
abline(h=12, lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <-subset(pollution,region="west")
west <-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
swirl()
library(swirl)
swirl()
?Devices
faithful
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
dev.off()
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
png(file="geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(cars$speed,cars$dist))
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot( Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot( Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$ozone,na.rm=TRUE)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
source('~/GIT/GettingData/quiz2/q.R')
source('~/GIT/GettingData/quiz2/q1.R')
source('~/GIT/GettingData/quiz2/q1.R')
install.packages("sqldf")
source('~/GIT/GettingData/quiz2/q1.R')
setwd("~/GIT/GettingData/quiz2")
source('~/GIT/GettingData/quiz2/q1.R')
install.packages("sqldf")
source('~/GIT/GettingData/quiz2/q1.R')
source('~/GIT/GettingData/quiz2/q5.R')
source('~/GIT/GettingData/quiz2/q5.R')
setwd("~/GIT/GettingData/quiz2")
source('~/GIT/GettingData/quiz2/q5.R')
source('~/GIT/GettingData/quiz2/q5.R')
head(df)
sum(df[, 4])
source('~/GIT/GettingData/quiz2/q.R')
setwd("~/GIT/GettingData/quiz2")
source('~/GIT/GettingData/quiz2/q01.R')
source('~/GIT/GettingData/quiz2/q01.R')
source('~/GIT/GettingData/quiz2/q01.R')
source('~/GIT/GettingData/quiz2/q01.R')
library(httr)
oauth_endpoint("github")
oauth_endpoints("github")
myapp <- oauth_app("github", "14de289af1b850d0adc5", "7b7e4ec8d308c6447f750bcf0e45afcc006ba514")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
source('~/GIT/GettingData/quiz2/q1.R')
install.packages("sqldf")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
acs <- read.csv("getdata_data_ss06pid.csv", header=T, sep=",")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
length(unique(acs$AGEP))
source('~/GIT/GettingData/quiz2/q04.R')
nchar
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
source('~/GIT/GettingData/quiz2/q04.R')
nchar
source('~/GIT/GettingData/quiz2/q04.R')
source('~/GIT/GettingData/quiz2/q05.R')
sum(df[, 4])
sum(df[, 4])
sum(df[, 4])
source('~/GIT/GettingData/quiz2/q05.R')
source('~/GIT/GettingData/quiz2/q05.R')
myresult
source('~/GIT/GettingData/quiz2/q05.R')
?read.fwf
head(df)
